jstl .jar
ojdbc.jar
mysqlconnector8.0.21.jar

h2 database

jdk 1.8

tomcat 8

spring framework ( 이제 jsp 쓸일은 없을거야~~~~ )
	eclipse에서 Eclipse Marketplace 들어가기 --> 검색창에 sts 치기 --> 4.3.9.14버전 install 누르기 
	--> confirm --> 다 깔리고 i accept 누르고 finish 누르기 --> 깔리는 중이니 기다렸다가 restart 나오면 누르기
	--> window에 preferences 들어가서 spring 있으면 잘 설치된 것

프로젝트
spring legacy project - mvc project

기본 패키지명에 .이 두개 이상 들어가야한다

처음에는 만들면서 라이브러리 까는 중이니 기다리고
안깔리면 다시 시작 후에 다시 프로젝트 만들기

resource는 원래 jsp에서 res역할

라이브러리 파일은 maven dependencies에 있음

프로젝트 파일 오른쪽 클릭 -> project facets 들어가기 -> runtime tomcat 눌러주기 -> java 1.8버전 바꾸기

web.xml 들어가서 <!부분부터 </web-app> 전까지 다 지우기

전자정부프레임워크가 4버전이라 우리가 5버전 잘안쓸듯..

구글에 maven spring 검색 -> https://mvnrepository.com/artifact/org.springframework/spring-core 사이트
4버전 최신 버전 

pom.xml 들어가서 자바 버전 1.8로 바꾸고 spring 최신버전 설치한거 버전으로 적기



프레임워크 : 뼈대 , 체제 등 골격 등을 말함     /// 국가 산업은 전자장부프레임워크로 만듦.

프레임워크에 대한 학습이 필요함

복잡한 프로젝트는 하이버네이트를 많이 씀 (유지관리가 쉬움)  /// 유지관리가 쉬울수록 처음에 만들 때 엄청 복잡함

특징
	- POJO(Plain Old Java Object)방식
			
	- IoC(Inversion of Control) 제어반전 :
			객체 생성을 컨테이너에 맡긴다

	- AOP(Aspect Oriented Programming) 관점 지향 프로그래밍 : 
			로깅, 트랜잭션, 보안 등 여러 모듈에서 공통적으로 사용하는 기능을 분리하여 관리 가능
		
	- DI(Dependency Injection) 의존성 주입
		프로그래밍에서 구성요소 간의 의존 관계가 
		소스코드 내부가 아닌 외부의 설정파일을 통해 정의되는 방식
	- Bean 등록!!
		생성은 컨테이너(스프링)이 직접 생성하고 사람은 관여 X

콘센트에 맞는 단자만 끼우면 기계가 작동되는 단자? 콘센트? 이런거를 만드는 것 = interface

bean은 객체라 보면 된다

목표 : 자바소스를 안고치고 객체를 만들 수 있게 하는것

lifecycle :  - init 메소드, destroy 메소드

private에 값넣는 방법 : 메소드 생성자 

xml을 Spring Config Editor로 안열면 nameSpaces가 안열린다 

namespaces는 자바에서 import같은 역할

애노테이션 장점 : 겁나 편함

xml : 재컴파일 필요함 (재컴파일 필요한 것만 xml쓰기)

폰트 저작권 2차 가공물은 상관 없음 ㅋㅋ
뭐 그냥 쓸려면 이미지로 ㅋㅋ

클래스에 @Component 쓰면 (Component 쓰려면 context써야함 ㅋㅋㄹㅃㅃ)
xml에서는 bean에  그냥 있는거?임
<context>쓸라면 nameSpaces에서 context 체크하기
@Component("tv") = <bean id="tv" class="polymorphism.SamsungTV"/>

xml 쓰기 싫으면 각각에 component("id값") 넣고 실행하려는 class에서 @Qualifier써서 결정해서 보냄


maven mybatis 최신버전 

pom.xml 에서 test 쳐서 두번째 test 밑에 defendency사이에 넣기

<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis -->
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis</artifactId>
    <version>3.5.5</version>
</dependency>

maven mybatis spring 최신버전

<!-- https://mvnrepository.com/artifact/org.mybatis/mybatis-spring -->
<dependency>
    <groupId>org.mybatis</groupId>
    <artifactId>mybatis-spring</artifactId>
    <version>2.0.5</version>
</dependency>

maven hikaricp 

<!-- https://mvnrepository.com/artifact/com.zaxxer/HikariCP -->
<dependency>
    <groupId>com.zaxxer</groupId>
    <artifactId>HikariCP</artifactId>
    <version>3.4.5</version>
</dependency>

jdbc

<dependency>
<groupId>org.springframework</groupId>
<artifactId>spring-jdbc</artifactId>
<version>${org.springframework-version}</version>
</dependency>

jackson

<dependency>
<groupId>com.fasterxml.jackson.core</groupId>
<artifactId>jackson-core</artifactId>
<version>2.11.2</version></dependency>

jbcrypt

<!-- https://mvnrepository.com/artifact/org.mindrot/jbcrypt -->
<dependency>
    <groupId>org.mindrot</groupId>
    <artifactId>jbcrypt</artifactId>
    <version>0.4</version>
</dependency>

commons io

<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>2.8.0</version>
</dependency>

commons fileupload

<dependency>
<groupId>commons-fileupload</groupId>
<artifactId>commons-fileupload</artifactId>
<version>1.4</version></dependency>

matzip spring 폴더 web.xml

<filter>

		<filter-name>encodingFilter</filter-name>

		<filter-class>

			org.springframework.web.filter.CharacterEncodingFilter

		</filter-class>

		<init-param>

			<param-name>encoding</param-name>

			<param-value>UTF-8</param-value>

		</init-param>

		<init-param>

			<param-name>forceEncoding</param-name>

			<param-value>true</param-value>

		</init-param>

	</filter>

	<filter-mapping>

		<filter-name>encodingFilter</filter-name>

		<url-pattern>/*</url-pattern>

	</filter-mapping>



